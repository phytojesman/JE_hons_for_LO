all_nodes <- V(ig)$name
# includes all nodes with > 0 connections
labels <- ifelse(node_degrees > 0, V(ig)$name, NA)
my_nodes1 <- intersect(labels$., all_nodes)
# includes all nodes with > 0 connections
labels <- ifelse(node_degrees > 0, V(ig)$name, NA) %>% as.character()
my_nodes1 <- intersect(labels$., all_nodes)
my_nodes1 <- intersect(labels, all_nodes)
fullgraph <- induced_subgraph(ig, vids = my_nodes1)
View(fullgraph)
# encode degree information
V(fullgraph)$degree <- degree(fullgraph)
# defining groups
fish_nodes <- labels[1:23, ]
# defining groups
fish_nodes <- labels[1:23]
# includes all nodes with > 0 connections
labels <- ifelse(node_degrees > 0, V(ig)$name, NA) %>% as.character()
# includes all nodes with > 0 connections
labels <- ifelse(node_degrees > 0, V(ig)$name, NA) %>% as.character() %>%
na.exclude()
my_nodes1 <- intersect(labels, all_nodes)
fullgraph <- induced_subgraph(ig, vids = my_nodes1)
# encode degree information
V(fullgraph)$degree <- degree(fullgraph)
# defining groups
fish_nodes <- labels[1:23]
fish_nodes
cope_nodes <- labels[24:62]
fullg_plot <- data.frame(
name = V(fullgraph)$name,
group = ifelse(V(fullgraph)$name %in% fish_nodes, "Larval fish",
ifelse(V(fullgraph)$name %in% cope_nodes, "Copepod", "Other"))
)
fullgraph_tbl <- as_tbl_graph(fullgraph)
fullgraph_tbl <- fullgraph_tbl %>%
activate(nodes) %>%
left_join(subg_plot, by = "name")
ggraph(fullgraph_tbl * 1.5, layout = "fr") +
geom_edge_fan(aes(width = partcor, colour = partcor)) +
scale_edge_width(range = c(0.2, 2)) +
scale_edge_color_gradient2(low = "darkred",
mid = "cornsilk2",
high = "deepskyblue4",
midpoint = 0) +
geom_node_point(aes(colour = group, size = degree)) +
geom_node_text(aes(label = name, size = degree), repel = TRUE,
vjust = 1.7) +
scale_size_continuous(range = c(3, 5)) +
scale_color_manual(values = c("Larval fish" = "aquamarine4",
"Copepod" = "coral",
"Other" = "gray")) +
theme_void() +
theme(legend.position = 'none')
View(fullgraph)
fullgraph$name
V(fullgraph)$name
View(fullg_plot)
fullgraph_tbl <- as_tbl_graph(fullgraph)
View(fullgraph_tbl)
fullgraph_tbl <- fullgraph_tbl %>%
activate(nodes) %>%
left_join(subg_plot, by = "name")
fullgraph_tbl <- fullgraph_tbl %>%
activate(nodes) %>%
left_join(fullg_plot, by = "name")
ggraph(fullgraph_tbl * 1.5, layout = "fr") +
geom_edge_fan(aes(width = partcor, colour = partcor)) +
scale_edge_width(range = c(0.2, 2)) +
scale_edge_color_gradient2(low = "darkred",
mid = "cornsilk2",
high = "deepskyblue4",
midpoint = 0) +
geom_node_point(aes(colour = group, size = degree)) +
geom_node_text(aes(label = name, size = degree), repel = TRUE,
vjust = 1.7) +
scale_size_continuous(range = c(3, 5)) +
scale_color_manual(values = c("Larval fish" = "aquamarine4",
"Copepod" = "coral",
"Other" = "gray")) +
theme_void() +
theme(legend.position = 'none')
# full network
all_nodes <- V(ig)$name
# includes all nodes with > 0 connections
labels <- ifelse(node_degrees > 0, V(ig)$name, NA) %>% as.character() %>%
na.exclude()
my_nodes1 <- intersect(labels, all_nodes)
fullgraph <- induced_subgraph(ig, vids = my_nodes1)
# encode degree information
V(fullgraph)$degree <- degree(fullgraph)
# defining groups
fish_nodes <- labels[1:23]
cope_nodes <- labels[24:62]
V(fullgraph)$name
fullg_plot <- data.frame(
name = V(fullgraph)$name,
group = ifelse(V(fullgraph)$name %in% fish_nodes, "Larval fish",
ifelse(V(fullgraph)$name %in% cope_nodes, "Copepod", "Other"))
)
fullgraph_tbl <- as_tbl_graph(fullgraph)
fullgraph_tbl <- fullgraph_tbl %>%
activate(nodes) %>%
left_join(fullg_plot, by = "name")
ggraph(fullgraph_tbl * 1.5, layout = "fr") +
geom_edge_fan(aes(width = partcor, colour = partcor)) +
scale_edge_width(range = c(0.2, 2)) +
scale_edge_color_gradient2(low = "darkred",
mid = "cornsilk2",
high = "deepskyblue4",
midpoint = 0) +
geom_node_point(aes(colour = group, size = degree)) +
geom_node_text(aes(label = name, size = degree), repel = TRUE,
vjust = 1.7) +
scale_size_continuous(range = c(3, 5)) +
scale_color_manual(values = c("Larval fish" = "aquamarine4",
"Copepod" = "coral",
"Other" = "gray")) +
theme_void() +
theme(legend.position = 'none')
# Load necessary packages
library(ggraph)
library(igraph)
library(tidygraph)
library(dplyr)
library(zoo)
# Load and preprocess data
data <- read.csv("stdset.csv") %>%
dplyr::select(where(~ !is.numeric(.) || is.numeric(.) &&
sum(., na.rm = T) > 0)) %>%
mutate(across(where(is.numeric), ~ na.approx(., na.rm = F, rule = 2)))
# Load necessary packages
library(ggraph)
library(igraph)
library(tidygraph)
library(dplyr)
library(zoo)
# Load and preprocess data
data <- read.csv("stdset.csv") %>%
dplyr::select(where(~ !is.numeric(.) || is.numeric(.) &&
sum(., na.rm = T) > 0)) %>%
mutate(across(where(is.numeric), ~ na.approx(., na.rm = F, rule = 2)))
# Create GLM and CGGM model
library(mvabund)
library(ecoCopula)
bio_resp <- data[12:235] %>% mvabund()
meta <- data[1:9]
mod <- manyany(
formula = bio_resp ~ meta$StationCode + meta$CTDSST_degC,
data = meta,
fn = "glm",
family = tweedie(var.power = 1.011, link.power = 0)
)
# Define node groups and create full network
labels <- V(ig)$name[degree(ig) > 0] %>% na.exclude()
fish_nodes <- labels[1:23]
cope_nodes <- labels[24:62]
fullgraph <- induced_subgraph(ig, vids = labels)
V(fullgraph)$degree <- degree(fullgraph)
fullg_plot <- data.frame(
name = V(fullgraph)$name,
group = ifelse(V(fullgraph)$name %in% fish_nodes, "Larval fish",
ifelse(V(fullgraph)$name %in% cope_nodes, "Copepod", "Other"))
)
fullgraph_tbl <- as_tbl_graph(fullgraph) %>%
activate(nodes) %>%
left_join(fullg_plot, by = "name")
# Plot full network
ggraph(fullgraph_tbl, layout = "fr") +
geom_edge_fan(aes(width = partcor, colour = partcor)) +
scale_edge_width(range = c(0.2, 2)) +
scale_edge_color_gradient2(low = "darkred", mid = "cornsilk2", high = "deepskyblue4", midpoint = 0) +
geom_node_point(aes(colour = group, size = degree)) +
geom_node_text(aes(label = name, size = degree), repel = TRUE, vjust = 1.7) +
scale_size_continuous(range = c(3, 5)) +
scale_color_manual(values = c("Larval fish" = "aquamarine4", "Copepod" = "coral", "Other" = "gray")) +
theme_void() +
theme(legend.position = 'none')
# Define subset nodes
ic_fish_nodes <- c("Trachurus.novaezelandiae", "Engraulis.australis", "Sardinops.sagax", "Scomber.australasicus")
ic_cope_nodes <- c("Acartia.tranteri", "Clausocalanus.furcatus", "Diothonia.rigida", "Euterpina.acutifrons",
"Microsetella.norvegica", "Oithona.atlantica", "Paracalanus.indicus", "Temora.turbinata")
subgraph <- induced_subgraph(ig, vids = intersect(c(ic_fish_nodes, ic_cope_nodes), V(ig)$name))
V(subgraph)$degree <- degree(subgraph)
subg_plot <- data.frame(
name = V(subgraph)$name,
group = ifelse(V(subgraph)$name %in% ic_fish_nodes, "Larval fish",
ifelse(V(subgraph)$name %in% ic_cope_nodes, "Copepod", "Other"))
)
subgraph_tbl <- as_tbl_graph(subgraph) %>%
activate(nodes) %>%
left_join(subg_plot, by = "name")
# Plot subset network
ggraph(subgraph_tbl, layout = "fr") +
geom_edge_fan(aes(width = partcor, colour = partcor)) +
scale_edge_width(range = c(0.2, 2)) +
scale_edge_color_gradient2(low = "darkred", mid = "cornsilk2", high = "deepskyblue4", midpoint = 0) +
geom_node_point(aes(colour = group, size = degree)) +
geom_node_text(aes(label = name, size = degree), repel = TRUE, vjust = 1.7) +
scale_size_continuous(range = c(3, 5)) +
scale_color_manual(values = c("Larval fish" = "aquamarine4", "Copepod" = "coral", "Other" = "gray")) +
theme_void() +
theme(legend.position = 'none')
data <- read.csv("datasets/stdset.csv") %>%
dplyr::select(where(~ !is.numeric(.) || is.numeric(.) &&
sum(., na.rm = T) > 0)) %>%
mutate(across(where(is.numeric), ~ na.approx(.,
na.rm = F,
rule = 2)))
# load packages and data
library(tidyverse)
data <- read.csv("datasets/stdset.csv") %>%
dplyr::select(where(~ !is.numeric(.) || is.numeric(.) &&
sum(., na.rm = T) > 0)) %>%
mutate(across(where(is.numeric), ~ na.approx(.,
na.rm = F,
rule = 2)))
library(zoo)
data <- read.csv("datasets/stdset.csv") %>%
dplyr::select(where(~ !is.numeric(.) || is.numeric(.) &&
sum(., na.rm = T) > 0)) %>%
mutate(across(where(is.numeric), ~ na.approx(.,
na.rm = F,
rule = 2)))
rm(data)
data <- read.csv("datasets/set.csv") %>%
dplyr::select(where(~ !is.numeric(.) || is.numeric(.) &&
sum(., na.rm = T) > 0)) %>%
mutate(across(where(is.numeric), ~ na.approx(.,
na.rm = F,
rule = 2)))
#Trachurus novaezelandiae
yak <- glmmTMB(Trachurus.novaezelandiae ~ poly(CTDSST_degC,2,raw=TRUE) +
CTDChlaSurf_mgm3 + CTDSalinity_psu + GSLA + Biomass_mgm3 +
Paracalanus.indicus +
Temora.turbinata + Oithona.nana + Clausocalanus.pergens,
family = nbinom1,
offset = log(Volume_m3),
data = data)
# load packages and data
library(tidyverse)
library(zoo)
library(glmmTMB)
#Trachurus novaezelandiae
yak <- glmmTMB(Trachurus.novaezelandiae ~ poly(CTDSST_degC,2,raw=TRUE) +
CTDChlaSurf_mgm3 + CTDSalinity_psu + GSLA + Biomass_mgm3 +
Paracalanus.indicus +
Temora.turbinata + Oithona.nana + Clausocalanus.pergens,
family = nbinom1,
offset = log(Volume_m3),
data = data)
yak %>% check_collinearity()
library(performance) #vifs
yak %>% check_collinearity()
yak %>% check_zeroinflation()
yak %>% simulateResiduals %>% plot
library(DHARMa)
yak %>% simulateResiduals %>% plot
yak %>% simulateResiduals %>% plot
yak %>% summary
#Sardinops sagax
sar <- glmmTMB(Sardinops.sagax ~ poly(CTDSST_degC,2,raw=TRUE) + GSLA +
CTDChlaSurf_mgm3 + CTDSalinity_psu + Biomass_mgm3 +
Acartia.tranteri + Clausocalanus.furcatus +
Ctenocalanus.vanus + Microsetella.rosea +
Microsetella.norvegica + Temora.turbinata +
Paracalanus.indicus + Acartia.tranteri +
Clausocalanus.furcatus + Euterpina.acutifrons,
family = nbinom2,
offset = log(Volume_m3),
data = data)
sar %>% check_collinearity()
sar %>% check_zeroinflation()
sar %>% simulateResiduals %>% plot
sar %>% summary
#Engraulis australis
anch <- glmmTMB(Engraulis.australis ~ poly(CTDSST_degC,2,raw=TRUE) + GSLA +
CTDChlaSurf_mgm3 + CTDSalinity_psu + Biomass_mgm3 +
Oithona.nana + Microsetella.norvegica + Euterpina.acutifrons +
Oithona.plumifera + Parvocalanus.crassirostris +
Paracalanus.indicus + Clausocalanus.furcatus +
Temora.turbinata,
family = nbinom1,
offset = log(Volume_m3),
data = data)
anch %>% check_autocorrelation()
anch %>% check_collinearity()
anch %>% check_zeroinflation()
anch %>% simulateResiduals %>% plot
anch %>% summary
mack %>% check_collinearity()
#Scomber australasicus
mack <- glmmTMB(Scomber.australasicus ~ poly(CTDSST_degC,2,raw=FALSE) + GSLA +
CTDChlaSurf_mgm3 + CTDSalinity_psu + Biomass_mgm3 +
Oncaea.clevei + Paracalanus.indicus + Delibus.nudus +
Parvocalanus.crassirostris + Euterpina.acutifrons +
Clausocalanus.furcatus,
family = nbinom1,
offset = log(Volume_m3),
data = data)
mack %>% check_collinearity()
mack %>% check_zeroinflation()
mack %>% simulateResiduals %>% plot
mack %>% summary
#Lophonectes gallus
der <- glmmTMB(Lophonectes.gallus ~ poly(CTDSST_degC,2,raw=TRUE) + GSLA +
CTDChlaSurf_mgm3 + CTDSalinity_psu + Biomass_mgm3 +
Oithona.atlantica + Oithona.plumifera + Clausocalanus.jobei +
Paracalanus.indicus + Oncaea.venusta,
family = nbinom1,
offset = log(Volume_m3),
data = data)
der %>% check_collinearity()
der %>% check_zeroinflation()
der %>% simulateResiduals %>% plot
der %>% summary
#Sillago flindersi
ting <- glmmTMB(Sillago.flindersi ~ poly(CTDSST_degC,2,raw=TRUE) + GSLA +
CTDChlaSurf_mgm3 + CTDSalinity_psu + Biomass_mgm3 +
Paracalanus.indicus + Microsetella.norvegica +
Oncaea.media + Oithona.simplex + Oithona.plumifera,
family = nbinom1,
offset = log(Volume_m3),
data = data)
ting %>% check_collinearity()
ting %>% check_zeroinflation()
ting %>% simulateResiduals %>% plot
ting %>% summary
#Trachurus declivis
jack <- glmmTMB(Trachurus.declivis ~ poly(CTDSST_degC,2,raw=TRUE) + GSLA +
CTDChlaSurf_mgm3 + CTDSalinity_psu + Biomass_mgm3 +
Paracalanus.indicus + Oithona.atlantica + Calanus.australis +
Nannocalanus.minor + Farranula.rostrata,
family = nbinom2,
offset = log(Volume_m3),
data = data)
jack %>% check_zeroinflation()
jack %>% check_collinearity()
jack %>% simulateResiduals %>% plot
jack %>% summary
library(car)
# type III ANOVAs
car::Anova(copyak, type = "III")
# type III ANOVAs
car::Anova(yak, type = "III")
# type III ANOVAs
chi_tn <- car::Anova(copyak, type = "III") %>% tidy
# load packages and data
library(tidyverse)
# type III ANOVAs
chi_tn <- car::Anova(copyak, type = "III") %>% tidy
# type III ANOVAs
chi_tn <- car::Anova(copyak, type = "III") %>% tidy()
# type III ANOVAs
car::Anova(copyak, type = "III")
# type III ANOVAs
car::Anova(yak, type = "III")
car::Anova(yak, type = "III")
car::Anova(sar, type = "III")
car::Anova(anch, type = "III")
car::Anova(mack, type = "III")
car::Anova(der, type = "III")
car::Anova(ting, type = "III")
car::Anova(jack, type = "III")
PIplotyak <- predict_response(yak, terms = "Paracalanus.indicus [all]")
library(ggeffects) #partial effects
PIplotyak <- predict_response(yak, terms = "Paracalanus.indicus [all]")
Bioplotsar <- predict_response(sar, terms = "Biomass_mgm3 [all]")
PIplotsar <- predict_response(sar, terms = "Paracalanus.indicus [all]")
EAplotsar <- predict_response(sar, terms = "Euterpina.acutifrons [all]")
PIplotmack <- predict_response(mack, terms = "Paracalanus.indicus [all]")
EAplotmack <- predict_response(mack, terms = "Euterpina.acutifrons [all]")
PIplotjack <- predict_response(jack, terms = "Paracalanus.indicus [all]")
NMplotjack <- predict_response(jack, terms = "Nannocalanus.minor [all]")
PIyak <- ggplot(PIplotyak, aes(x = x, y = log(predicted))) +
geom_line() +
geom_ribbon(aes(ymin = log(conf.low), ymax = log(conf.high)), fill = "#fde725",
alpha = 0.2) +
geom_rug(aes(x = x), sides = "b", length = unit(0.1, "npc")) +
labs(x = expression(italic("P. indicus") * " density (individuals/m3)"),
y = expression(italic("T. novaezelandiae") * " Abundance"),
title = "a)") +
scale_y_continuous(
breaks = function(predicted) c(min(predicted),
max(predicted))) +
theme_minimal() +
theme(legend.position = "none")
PIyak
Biosar <- ggplot(Bioplotsar, aes(x = x, y = log(predicted))) +
geom_line() +
geom_ribbon(aes(ymin = log(conf.low), ymax = log(conf.high)),
fill = "#35b779", alpha = 0.2) +
geom_rug(aes(x = x), sides = "b", length = unit(0.1, "npc")) +
labs(x = "Zooplankton biomass (g/m3)",
y = expression(italic("S. sagax") * " abundance"),
title = "b)") +
scale_y_continuous(
breaks = function(predicted) c(min(predicted),
max(predicted))) +
theme_minimal() +
theme(legend.position = "none")
Biosar
PIsar <- ggplot(PIplotsar, aes(x = x, y = log(predicted))) +
geom_line() +
geom_ribbon(aes(ymin = log(conf.low), ymax = log(conf.high)),
fill = "#35b779", alpha = 0.2) +
geom_rug(aes(x = x), sides = "b", length = unit(0.1, "npc")) +
labs(x = expression(italic("P. indicus") * " density (individuals/m3)"),
y = expression(italic("S. sagax") * " abundance"),
title = "c)") +
scale_y_continuous(
breaks = function(predicted) c(min(predicted),
max(predicted))) +
theme_minimal() +
theme(legend.position = "none")
PIsar
EAsar <- ggplot(EAplotsar, aes(x = x, y = log(predicted))) +
geom_line() +
geom_ribbon(aes(ymin = log(conf.low), ymax = log(conf.high)),
fill = "#35b779", alpha = 0.2) +
geom_rug(aes(x = x), sides = "b", length = unit(0.1, "npc")) +
labs(x = expression(italic("E. acutifrons") * " density (individuals/m3)"),
y = expression(italic("S. sagax") * " abundance"),
title = "d)") +
scale_y_continuous(
breaks = function(predicted) c(min(predicted),
max(predicted))) +
theme_minimal() +
theme(legend.position = "none")
EAsar
PImack <- ggplot(PIplotmack, aes(x = x, y = log(predicted))) +
geom_line() +
geom_ribbon(aes(ymin = log(conf.low), ymax = log(conf.high)),
fill = "#31688e", alpha = 0.2) +
geom_rug(aes(x = x), sides = "b", length = unit(0.1, "npc")) +
labs(x = expression(italic("P. indicus") * " density (individuals/m3)"),
y = expression(italic("S. australasicus") * " abundance"),
title = "e)") +
theme_minimal() +
theme(legend.position = "none")
EAmack <- ggplot(EAplotmack, aes(x = x, y = log(predicted))) +
geom_line() +
geom_ribbon(aes(ymin = log(conf.low), ymax = log(conf.high)),
fill = "#31688e", alpha = 0.2) +
geom_rug(aes(x = x), sides = "b", length = unit(0.1, "npc")) +
labs(x = expression(italic("E. acutifrons") * " density (individuals/m3)"),
y = expression(italic("S. australasicus") * " abundance"),
title = "f)") +
scale_y_continuous(
breaks = function(predicted) c(min(predicted),
max(predicted))) +
theme_minimal() +
theme(legend.position = "none")
PIjack <- ggplot(PIplotjack, aes(x = x, y = log(predicted))) +
geom_line() +
geom_ribbon(aes(ymin = log(conf.low), ymax = log(conf.high)),
fill = "#440154", alpha = 0.2) +
geom_rug(aes(x = x), sides = "b", length = unit(0.1, "npc")) +
labs(x = expression(italic("P. indicus") * " density (individuals/m3)"),
y = expression(italic("T. declivis") * " abundance"),
title = "g)") +
scale_y_continuous(
breaks = function(predicted) c(min(predicted),
max(predicted))) +
theme_minimal() +
theme(legend.position = "none")
NMjack <- ggplot(NMplotjack, aes(x = x, y = log(predicted))) +
geom_line() +
geom_ribbon(aes(ymin = log(conf.low), ymax = log(conf.high)),
fill = "#440154", alpha = 0.2) +
geom_rug(aes(x = x), sides = "b", length = unit(0.1, "npc")) +
labs(x = expression(italic("N. minor") * " density (individuals/m3)"),
y = expression(italic("T. declivis") * " abundance"),
title = "h)") +
scale_y_continuous(
breaks = function(predicted) c(min(predicted),
max(predicted))) +
theme_minimal() +
theme(legend.position = "none")
(PIyak + Biosar) /
(PIsar + EAsar) /
(PImack + EAmack) /
(PIjack + NMjack)
(PIyak + Biosar) /
(PIsar + EAsar) /
(PImack + EAmack) /
(PIjack + NMjack)
library(patchwork) #plotting
(PIyak + Biosar) /
(PIsar + EAsar) /
(PImack + EAmack) /
(PIjack + NMjack)
#yakka
SSTplotyak <- predict_response(copyak, terms = "CTDSST_degC [all]") %>% plot
#yakka
SSTplotyak <- predict_response(yak, terms = "CTDSST_degC [all]") %>% plot
PIplotyak <- predict_response(yak, terms = "Paracalanus.indicus [all]") %>% plot
SSTplotyak
SSTplotyak + PIplotyak +
plot_annotation(title = "Significant partial effects",
subtitle = "Trachurus novaezelandiae") +
plot_layout(axes = "collect")
SSTplotsar <- predict_response(sar, terms = "CTDSST_degC [all]") %>% plot
GSLAplotsar <- predict_response(sar, terms = "GSLA [all]") %>% plot
Chlplotsar <- predict_response(sar, terms = "CTDChlaSurf_mgm3 [all]") %>% plot
Bioplotsar <- predict_response(sar, terms = "Biomass_mgm3 [all]") %>% plot
PIplotsar <- predict_response(sar, terms = "Paracalanus.indicus [all]") %>% plot
EAplotsar <- predict_response(sar, terms = "Euterpina.acutifrons [all]") %>% plot
SSTplotsar + GSLAplotsar + Chlplotsar +
plot_annotation(title = "Significant partial effects",
subtitle = "Sardinops sagax") +
plot_layout(axes = "collect")
